.. _sim_workings_reference-label:

How does the Simulation Methodology Work?
====================================================

Basic Description
-----------------------

This is a relatively in-depth description of how the simulation methodology calculates :ref:`expected losses/payouts<g_expectedpayout_reference-label>` and other metrics. For a more high-level overview, please consult the simulation page user instructions or in-app help text.
The simulation method can be broken down into a few distinct steps: 

* **Step 1: Randomly select a number of different latitude-longitudes near the area of exposure.** The user defines the number of locations to be randomly sampled (or number of :ref:`simulations<g_simulation_reference-label>`), in the simulation tab. Each random selection of a :ref:`latitude-longitude<g_latlong_reference-label>` is known as a :ref:`"simulation"<g_simulation_reference-label>`. 

* **Step 2: Record the payouts generated for each simulation in each year of the historical data.** This step involves looking at the :ref:`event<g_event_reference-label>`s in :ref:`hazard<g_hazard_reference-label>` data (e.g., :ref:`IBTrACS<g_ibtracs_reference-label>`)  and seeing which storms would have exceeded the relevant :ref:`trigger values<g_triggervalue_reference-label>` set in the :ref:`vulnerability<g_vulnerability_reference-label>` tab. The :ref:`expected payouts<g_expectedpayout_reference-label>` for each :ref:`event<g_event_reference-label>` are then recorded by checking against your :ref:`vulnerability<g_vulnerability_reference-label>` thresholds. The years 1978-2021 are used for all basins here except the North Atlantic. 

* **Step 3: Average the payouts across all years in the historical data for each simulation.** This gives us an average over all the :ref:`simulation-years<g_simyear_reference-label>` for each :ref:`simulation<g_simulation_reference-label>` in the history. Each observation of a particular year in the history for a given simulated location is known as a :ref:`"simulation-year"<g_simyear_reference-label>`.

* **Step 4: Apply a weighting between 0 and 1 to the average payout for each simulation.** The :ref:`weighting<g_weighting_reference-label>` is based on how far away the simulated location is to the :ref:`exposure<g_exposure_reference-label>` (e.g., a :ref:`simulation<g_simulation_reference-label>` that was very close might get a :ref:`weighting<g_weighting_reference-label>` of 0.9, one that was far away might get a :ref:`weighting<g_weighting_reference-label>` of 0.1).

* **Step 5: Calculate the weighted average of the simulated average payouts for each location calculated in the earlier steps.** This is the :ref:`"weighted simulation loss/payout"<g_weightedsimloss_reference-label>`.


Detailed Steps
------------------

The next few sections go through each of these steps in more detail. 

**Step 1: How and why do we sample different locations?** 

It may seem odd to randomly select locations that are different to your :ref:`exposure<g_exposure_reference-label>`, however this is an important step which prevents over-generalising from a limited history and is the founding principle of all catastrophe models. For example, if your :ref:`exposure<g_exposure_reference-label>` is within a very small area or is a single location, you could have been relatively lucky and not had any significant wind :ref:`events<g_event_reference-label>` despite some :ref:`events<g_event_reference-label>` having just missed that location in the recorded history. If we just used the history at the :ref:`exposure<g_exposure_reference-label>` point, we would assume there is zero risk when this is clearly not the case. It is important to capture some element of variability in our :ref:`loss<g_payout_reference-label>` estimate.

When randomly sampling these points, what sort of limits should we apply on the types of locations we sample? Clearly it wouldn't make sense to randomly select points anywhere the world as most of these would have very different weather patterns to our :ref:`exposure<g_exposure_reference-label>` and may not even be located in the same tropical cyclone :ref:`basin<g_basin_reference-label>`. 

The method used here only looks at locations that are within 5 times the average :ref:`radius of maximum wind speed<g_rmw_reference-label>` (also known as RMW) from a tropical cyclone. If you're modelling an area, then the radius of this is added on to the RMW before multiplying (so zero for a single location). It is assumed in this model that the :ref:`radius of maximum wind speed<g_rmw_reference-label>` figure is 75km, based on a review of a number of academic papers and expert scientific judgement.

Written as a formula, the sampling area looks like this: 

*Distance from exposure to sample from = 5 x (Radius of Maximum Wind Speed of a Tropical Cyclone + Radius of Exposure)*

As an example, if we were modelling a single location, we would look to sample any locations that are within 5 x (75 + 0) = 375km of the :ref:`exposure<g_exposure_reference-label>`. By contrast if we were looking to model an area with a radius of 50km, we would draw sample locations from points within 5 x (75 + 50) = 625km of the :ref:`exposure<g_exposure_reference-label>`.

Five times the RMW is selected as this gives a good spread over the area to capture variability in nearby weather patterns. The area is also not so large that we are sampling from observations that are not relevant.

Random numbers are selected for each simulation for :ref:`latitudes and longitudes<g_latlong_reference-label>` that lie within the distance calculated above. These are then used in the subsequent calculations and represent our simulated locations.

The average :ref:`radius of maximum wind speed<g_rmw_reference-label>` is an important figure for another reason, as it is assumed if a location sits within this radius then the location is "hit" by the storm. This will be covered in more detail in Step 2.  

**Step 2: How do we calculate payouts for each simulated location?**

Now that we have our simulated locations, we need to check these against the storm tracks from the :ref:`IBTrACS<g_ibtracs_reference-label>` :ref:`hazard<g_hazard_reference-label>` data. We will then be able to work out which :ref:`events<g_event_reference-label>` would have historically led to :ref:`losses<g_payout_reference-label>`. This is done by drawing a 75km radius around each sampled location/area and checking which storms in the history would have passed through this circle. If a storm's track has taken it within 75km of the location/area, then it is assumed that this would have affected the location and potentially led to a :ref:`payout<g_payout_reference-label>`. As mentioned in the section above, 75km represents the RMW and it is assumed if a location sits within this radius then the location is "hit" by the storm.

Maximum wind speeds for each :ref:`event<g_event_reference-label>` from the :ref:`event set<g_eventset_reference-label>` (e.g., :ref:`IBTrACS<g_ibtracs_reference-label>`) that are recorded as falling within the circle are checked against relevant triggers from the :ref:`vulnerability<g_vulnerability_reference-label>` tab. These are then used to calculate the appropriate :ref:`payouts<g_payout_reference-label>` for each :ref:`event<g_event_reference-label>`. The :ref:`payouts<g_payout_reference-label>` generated by each storm are then recorded, giving us a complete history of all storms impacting each simulated location over the years. 

Consider an example where we run two :ref:`simulations<g_simulation_reference-label>` using a cyclone :ref:`hazard<g_hazard_reference-label>` dataset that covers three years of data (2019-2021). The cover being looked at is for a single location and has one trigger set at 178km/h which leads to a payout of 100,000 USD when a qualifying :ref:`event<g_event_reference-label>` occurs. The cover also has no :ref:`reinstatements<g_reinstatement_reference-label>`. The table below gives an idea of how the steps described above would work in practice, each row is an :ref:`event<g_event_reference-label>` in the :ref:`hazard<g_hazard_reference-label>` dataset that lies within a reasonable distance of the :ref:`exposure<g_exposure_reference-label>`.

.. list-table:: List of Hazard Data Events and Payouts
   :widths: 30 30 30 30 30 30
   :header-rows: 1

   * - Row Number 
     - Simulation Location Number
     - Simulation-Year
     - Max Wind Speed
     - Distance from Location
     - Payout (USD) 
   * - 1
     - 1
     - 2019
     - 185km/h
     - 50km
     - 100,000
   * - 2
     - 1
     - 2019
     - 200 km/h
     - 25km
     - 100,000
   * - 3
     - 1
     - 2020
     - 220km/h
     - 90km
     - 0
   * - 4
     - 1
     - 2021
     - 190km/h
     - 45km
     - 100,000
   * - 5
     - 2
     - 2019
     - 185km/h
     - 40km
     - 100,000
   * - 6
     - 2
     - 2021
     - 140km/h
     - 35km
     - 0

The :ref:`event<g_event_reference-label>` in row 3 doesn't generate a :ref:`payout<g_payout_reference-label>` despite exceeding the trigger, as it lies further than 75km away from location 1 and is therefore deemed to have not affected it. The :ref:`event<g_event_reference-label>` in row 6 doesn't generate a :ref:`loss<g_payout_reference-label>` either as the wind speed is below the trigger amount of 178km/h.

**Step 3: How do we get an expected payout for each simulation?**

The individual :ref:`event<g_event_reference-label>` :ref:`payouts<g_payout_reference-label>` calculated in Step 2 are then added up by :ref:`simulation-year<g_simyear_reference-label>`, giving a picture of the total :ref:`payout<g_payout_reference-label>` generated across each year of the history for each location. This is also where any :ref:`reinstatement<g_reinstatement_reference-label>` capping would apply.    E.g., if there are no :ref:`reinstatements<g_reinstatement_reference-label>`, only :ref:`losses<g_payout_reference-label>` up to the :ref:`maximum payout<g_maxpayout_reference-label>` for a single :ref:`event<g_event_reference-label>` would lead to :ref:`payouts<g_payout_reference-label>` from the cover.

Once we have the :ref:`payouts<g_payout_reference-label>` for each year of this history, it is simply a case of averaging across these to get an :ref:`average payout<g_expectedpayout_reference-label>` for each simulation. This is all we need to give us one view of the :ref:`expected payout<g_expectedpayout_reference-label>`, the :ref:`unweighted expected loss<g_unweightedsimloss_reference-label>`, which is a simple average of the :ref:`payout<g_payout_reference-label>` from each simulation. 

Going back to the example in step 2, the table below shows how we get from the :ref:`event<g_event_reference-label>` data to a table of :ref:`losses<g_payout_reference-label>` by :ref:`simulation-year<g_simyear_reference-label>`. 

.. list-table:: Payouts by Simulation-Year
   :widths: 30 30 30 30 30    
   :header-rows: 1

   * - Row Number 
     - Simulation Location Number
     - Simulation-Year
     - Payout (USD) Before Reinstatement Capping
     - Payout (USD) After Reinstatement Capping
   * - 1
     - 1
     - 2019
     - 200,000
     - 100,000
   * - 2
     - 1
     - 2020
     - 0
     - 0
   * - 3
     - 1
     - 2021
     - 100,000
     - 100,000
   * - 4
     - 2
     - 2019
     - 100,000     
     - 100,000
   * - 5
     - 2
     - 2020
     - 0
     - 0
   * - 6
     - 2
     - 2021
     - 0
     - 0
     
Notice that all years are listed here including those with no relevant :ref:`events<g_event_reference-label>` or :ref:`payouts<g_payout_reference-label>`. The impact of having no :ref:`reinstatements<g_reinstatement_reference-label>` on the cover is shown in row 1. 100,000 is the :ref:`maximum payout<g_maxpayout_reference-label>`, and because this has already been breached by the first :ref:`event<g_event_reference-label>` in the year, the total :ref:`loss<g_payout_reference-label>` is capped at this level and no further :ref:`payout<g_payout_reference-label>` is generated by the second :ref:`event<g_event_reference-label>`. If there had been one :ref:`reinstatement<g_reinstatement_reference-label>` on the cover, the :ref:`payout<g_payout_reference-label>` would have been capped at 200,000 as it would be assumed that the cover re-instated after the first :ref:`event<g_event_reference-label>` triggering the :ref:`maximum payout<g_maxpayout_reference-label>`. 

The next step is then to calculate a historical average across all years for each :ref:`simulation<g_simulation_reference-label>`.

.. list-table:: Payouts by Simulation
   :widths: 30 30 30
   :header-rows: 1

   * - Row Number 
     - Simulation Location Number
     - Average Payout (USD) After Reinstatement Capping
   * - 1
     - 1
     - (100,000 + 0 + 100,000) / 3 = **66,666.7**
   * - 2 
     - 2
     - (100,000 + 0 + 0) / 3 = **33,333.3**
   * - **Unweighted Simulated Loss**
     - 
     - (33,333.33 + 66,666.7) / 2 = **50,000**

For each :ref:`simulation<g_simulation_reference-label>` we are taking the total :ref:`reinstatement<g_reinstatement_reference-label>`-capped :ref:`payouts<g_payout_reference-label>` from the previous table and dividing these by the number of years of data to get an average. 2019-2021 is three years of data, hence the denominator of 3 above. This now gives us an :ref:`average payout<g_expectedpayout_reference-label>` for each :ref:`simulation<g_simulation_reference-label>`, taking a straight average across the two :ref:`simulations<g_simulation_reference-label>` gives us the :ref:`unweighted expected loss<g_unweightedsimloss_reference-label>` which is displayed in the bottom row. This assumes all :ref:`simulations<g_simulation_reference-label>` are given identical :ref:`weight<g_weighting_reference-label>`regardless of how far they are from the :ref:`exposure<g_exposure_reference-label>` and forms one of the measures of :ref:`expected loss/payout<g_expectedpayout_reference-label>` in the Risk Explorer's output tab. 

**Step 4: How do we weight each simulation?**

To get a view that takes into account the distance of the :ref:`simulations<g_simulation_reference-label>` from the :ref:`exposure<g_exposure_reference-label>`, we need to work out how to appropriately :ref:`weight<g_weighting_reference-label>` each :ref:`simulation<g_simulation_reference-label>`. Simulations nearer the :ref:`exposure<g_exposure_reference-label>` are likely to be more relevant and generalisable than those further away. As such, closer locations should be given higher :ref:`weights<g_weighting_reference-label>` in the :ref:`expected payout<g_expectedpayout_reference-label>` calculation. 

:ref:`Weightings<g_weighting_reference-label>` for each :ref:`simulation<g_simulation_reference-label>` will all be between 0 and 1 and are generally expressed as percentages. The most intuitive way to think of the :ref:`weightings<g_weighting_reference-label>` themselves is in relative terms. A :ref:`weighting<g_weighting_reference-label>` of 0.8 can be thought of as 80% of the potential maximum weighting, but it can also be interpreted as being given 8 times more weight in the final calculation than an observation weighted at 10%.

There are a number of potential weighting methods that could be used here so it's worth bearing in mind that there is a certain degree of judgement in this step. An exponential :ref:`weighting function<g_weighting_reference-label>` with a lambda parameter of 3.2 has been selected for calculating the weightings in this model based on scientific and actuarial expert judgement. The table below shows the different weightings for a single location at intervals of 75km away from the :ref:`exposure<g_exposure_reference-label>` to give some idea of how the weighting changes in practice:

.. list-table:: Weighting Examples
   :widths: 30 30 30
   :header-rows: 1

   * - Row Number 
     - Distance from Exposure
     - Exponential Weighting
   * - 1
     - 0
     - 100%
   * - 2 
     - 75
     - 53%
   * - 3 
     - 150
     - 28%
   * - 4 
     - 225
     - 15%
   * - 5 
     - 300
     - 8%

There are a few desirable properties to this function and parameterisation which makes the exponential a good choice. These are highlighted below:

* The :ref:`weighting<g_weighting_reference-label>` decreases at a constant rate as we move away from the :ref:`exposure<g_exposure_reference-label>`. For a single location, the weighting decreases by 19% in relative terms for every 25km we move away from the :ref:`exposure<g_exposure_reference-label>`. E.g., the weighting at 100km from the :ref:`exposure<g_exposure_reference-label>` is 43%, which is a 19% decrease from the 53% weighting for a location 75km from the :ref:`exposure<g_exposure_reference-label>`.

* The :ref:`weighting function<g_weighting_reference-label>` drops off quickly initially but the absolute decrease in :ref:`weights<g_weighting_reference-label>` slows as we get further away.    The reason for this is there is intuitively a bigger gap in usefulness of an observation 0km vs 75km away compared to an observation being 300km vs 375km away. 

* The :ref:`weighting<g_weighting_reference-label>` approaches zero as we get towards the edge of the potential sampling area.

.. figure:: ../docs_img/Weighting.png  
  :scale: 50%
  :alt: Weighting Graph
Exhibit demonstrating relationship between distance from exposure and weight for a single location.

Returning to our example in the earlier steps, these are the weightings that would be applied to each location:

.. list-table:: Weightings by Simulation 
   :widths: 30 30 30
   :header-rows: 1

   
   * - Simulation Location Number
     - Distance from Exposure
     - Weighting 
   * - 1
     - 125km
     - 34%
   * - 2
     - 200km
     - 18%

A detailed understanding of how the exponential function is calculated is not necessary to use the tool, however if you are interested in learning more about this, you can consult the appendix section at the bottom of the page.

**Step 5: How do we calculate the Simulated Weighted Payout?**

The last step in getting our :ref:`Simulated weighted Payout`<g_weightedsimloss_reference-label>` is calculating a weighted average. The :ref:`payouts<g_payout_reference-label>` for each :ref:`simulation<g_simulation_reference-label>` are scaled by their :ref:`weightings<g_weighting_reference-label>` and then divided by the sum of all :ref:`weightings<g_weighting_reference-label>`. 

Returning to the earlier example, we can now calculate the simulated weighted payout:

.. list-table:: Weightings by Simulation 
   :widths: 30 30 30 30 30
   :header-rows: 1

   
   * - Simulation Location Number
     - Distance from Exposure
     - Weighting 
     - Average Payout (USD) After Reinstatement Capping
     - Weighting x Average Payout
   * - 1
     - 125km
     - 34%
     - 66,666.7
     - 0.34 x 66,666.7 = 22,944
   * - 2
     - 200km
     - 18%
     - 33,333.3
     - 0.18 x 33,333.3 = 6,049
   * - **Simulated Weighted Payout**
     -
     -
     - 
     - (22,944 + 6,049) / (34%+18%) = **55,159**

In this case the expected weighted payout is 55,159. Note that this is higher than the :ref:`expected unweighted payout<g_unweightedsimloss_reference-label>` of 50,000 which was calculated in step 3. The reason for this difference is that
:ref:`simulation<g_simulation_reference-label>` 1 which had a higher average loss was given a higher :ref:`weight<g_weighting_reference-label>` in the calculation than :ref:`simulation<g_simulation_reference-label>` 2 which was lower. The reason for weighting location 1 higher is that it is closer to the :ref:`exposure<g_exposure_reference-label>` than location 2. 
In the unweighted calculation we implicitly assume all :ref:`simulations<g_simulation_reference-label>` have identical weighting so this generates a lower figure relative to the weighted payout. 

The Weighting x Average Payout column doesn't really have a practical interpretation but is shown to illustrate the different steps. The reason we need to divide by the sum of the :ref:`weightings<g_weighting_reference-label>` in the final calculation
is to ensure we aren't understating the total :ref:`loss<g_payout_reference-label>`. If we just added together the Weighting x Payout column, this number wouldn't account for the potential for a number of different :ref:`weightings<g_weighting_reference-label>` to emerge from the 
simulation process. This comes back again to the idea that the :ref:`weightings<g_weighting_reference-label>` themselves have more meaning when considered relative to one another, the sum of all :ref:`weightings<g_weighting_reference-label>` will differ each time a set of :ref:`simulations<g_simulation_reference-label>` 
is run so they need to be scaled accordingly.

**Appendix: Step 4: How do we weight each simulation?**

This section gives a brief demonstration of how we would go about calculating the exponential :ref:`weightings<g_weighting_reference-label>` described earlier. The calculation of these :ref:`weightings<g_weighting_reference-label>` relies on the mathematical constant “e” which is equal to  2.71828… .The formula for calculating the weighing is:

*Weighting = e ^ ( (sim distance / max distance) x – (exponential parameter) )*

Let’s assume we simulate a location that lies 150km from our :ref:`exposure<g_exposure_reference-label>` which is a single point. We also use the exponential parameter of 3.2 in the model. The weighting for this particular observation would be:

*Weighting = e ^ ( (150/( 5 x 75)) x -3.2 )*

*Weighting = e^(1.28)*

*Weighting = 27.8%*

This is the same weighting given in row 3 in the first table of step 4 (where it is rounded to one decimal place).
